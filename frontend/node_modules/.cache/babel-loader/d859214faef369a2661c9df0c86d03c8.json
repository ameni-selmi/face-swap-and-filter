{"ast":null,"code":"var _jsxFileName = \"E:\\\\me\\\\etude\\\\1ING\\\\me\\\\sem2\\\\lang script\\\\face swap\\\\frontend\\\\src\\\\components\\\\FaceSwapper.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport FileCopyIcon from '@mui/icons-material/FileCopyOutlined';\nimport SaveIcon from '@mui/icons-material/Save';\nimport PrintIcon from '@mui/icons-material/Print';\nimport ShareIcon from '@mui/icons-material/Share';\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Stack from '@mui/material/Stack';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport StepContent from '@mui/material/StepContent';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { Toaster, toast } from 'react-hot-toast';\nimport './FaceSwapper.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = styled('input')({\n  display: 'none'\n});\n_c = Input;\nconst actions = [{\n  icon: /*#__PURE__*/_jsxDEV(FileCopyIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }, this),\n  name: 'Copy'\n}, {\n  icon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 11\n  }, this),\n  name: 'Save'\n}, {\n  icon: /*#__PURE__*/_jsxDEV(PrintIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 11\n  }, this),\n  name: 'Print'\n}, {\n  icon: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 11\n  }, this),\n  name: 'Share'\n}];\n\nconst handleChange = event => {\n  const data = tableData;\n  data.fx = event.target.value;\n  axios.post('http://127.0.0.1:5000/send', data).then(res => {\n    setResult(res.data);\n    const a = JSON.parse(res.data.cost_history);\n    const ah = JSON.parse(res.data.cost_h_history);\n    setSeries([{\n      name: \"Cost\",\n      data: a\n    }]);\n    setSeriesh([{\n      name: \"Cost\",\n      data: ah\n    }]);\n    setOptions({\n      chart: {\n        height: 350,\n        type: 'line',\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'straight'\n      },\n      title: {\n        text: 'Cost History without inertia decay',\n        align: 'left'\n      },\n      grid: {\n        row: {\n          colors: ['#f3f3f3', 'transparent'],\n          // takes an array which will be repeated on columns\n          opacity: 0.5\n        }\n      },\n      xaxis: {\n        categories: Array.from(Array(a.length).keys())\n      },\n      yaxis: {\n        decimalsInFloat: 2\n      }\n    });\n    setOptionsh({\n      chart: {\n        height: 350,\n        type: 'line',\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'straight'\n      },\n      title: {\n        text: 'Cost History with inertia decay',\n        align: 'left'\n      },\n      grid: {\n        row: {\n          colors: ['#f3f3f3', 'transparent'],\n          // takes an array which will be repeated on columns\n          opacity: 0.5\n        }\n      },\n      xaxis: {\n        categories: Array.from(Array(a.length).keys())\n      },\n      yaxis: {\n        decimalsInFloat: 2\n      }\n    });\n    setSeries1([{\n      name: \"position\",\n      data: JSON.parse(res.data.pos_history)\n    }]);\n    setOptions1({\n      chart: {\n        height: 350,\n        type: 'scatter',\n        zoom: {\n          enabled: true,\n          type: 'xy'\n        }\n      },\n      xaxis: {\n        floating: true\n      },\n      yaxis: {\n        decimalsInFloat: 2\n      },\n      title: {\n        text: 'Animating swarms without inertia decay',\n        align: 'left'\n      }\n    });\n    setSeries1h([{\n      name: \"position\",\n      data: JSON.parse(res.data.pos_h_history)\n    }]);\n    setOptions1h({\n      chart: {\n        height: 350,\n        type: 'scatter',\n        zoom: {\n          enabled: true,\n          type: 'xy'\n        }\n      },\n      xaxis: {\n        floating: true\n      },\n      yaxis: {\n        decimalsInFloat: 2\n      },\n      title: {\n        text: 'Animating swarms with inertia decay ',\n        align: 'left'\n      }\n    });\n    setfn(event.target.value);\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nexport default function FaceSwapper() {\n  _s();\n\n  const [selectedSrcImage, setSelectedSrcImage] = useState(null);\n  const [selectedDestImage, setSelectedDestImage] = useState(null);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = [{\n    label: 'Source image',\n    description: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Paste image here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"ext\",\n          children: \"Only JPG and PNG.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), selectedSrcImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"not fount\",\n            width: \"250px\",\n            src: URL.createObjectURL(selectedSrcImage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          className: \"upload_button\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contained-button-file\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              accept: \"image/*\",\n              id: \"contained-button-file\",\n              multiple: true,\n              type: \"file\",\n              name: \"myImage\",\n              onChange: event => {\n                console.log(event.target.files[0]);\n                setSelectedSrcImage(event.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              component: \"span\",\n              style: {\n                backgroundColor: \"#EEB902\"\n              },\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  }, {\n    label: 'Destination image',\n    description: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Paste image here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"ext\",\n          children: \"Only JPG and PNG.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 7\n        }, this), selectedDestImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"not fount\",\n            width: \"250px\",\n            src: URL.createObjectURL(selectedDestImage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          className: \"upload_button\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contained-button-file\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              accept: \"image/*\",\n              id: \"contained-button-file\",\n              multiple: true,\n              type: \"file\",\n              name: \"myImage\",\n              onChange: event => {\n                console.log(event.target.files[0]);\n                setSelectedDestImage(event.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              component: \"span\",\n              style: {\n                backgroundColor: \"#EEB902\"\n              },\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  }, {\n    label: 'Result',\n    description: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 345\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"200\",\n          image: \"../src.jpg\",\n          alt: \"Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          disableSpacing: true,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"add to favorites\",\n            children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"share\",\n            children: /*#__PURE__*/_jsxDEV(ShareIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  }];\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleAlert = step => {\n    console.log('step', step);\n    if (step == 0) if (selectedSrcImage === null) toast.error('upload source image first!');else handleNext();\n    if (step == 1) if (selectedDestImage === null) toast.error('upload destination image first!');else handleNext();\n\n    if (step == 2) {\n      toast('Good Job!', {\n        icon: '👏'\n      });\n      handleNext();\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\",\n      reverseOrder: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"stepper-container\",\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        orientation: \"vertical\",\n        children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(Step, {\n          sx: {\n            '& .MuiStepLabel-root .Mui-completed': {\n              color: '#97CC04' // circle color (COMPLETED)\n\n            },\n            '& .MuiStepLabel-root .Mui-active': {\n              color: '#97CC04' // circle color (ACTIVE)\n\n            },\n            '& .MuiStepLabel-label .Mui-active .MuiStepLabel-alternativeLabel': {\n              color: 'black' // Just text label (ACTIVE)\n\n            },\n            '& .MuiStepLabel-root .Mui-active .MuiStepIcon-text': {\n              fill: 'white' // circle's number (ACTIVE)\n\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n            optional: index === 2 ? /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: \"Last step\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this) : null,\n            children: step.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: step.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    backgroundColor: \"#97CC04\"\n                  },\n                  variant: \"contained\",\n                  onClick: () => {\n                    handleAlert(index);\n                  },\n                  sx: {\n                    mt: 1,\n                    mr: 1\n                  },\n                  children: index === steps.length - 1 ? 'Finish' : 'Continue'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: index === 0,\n                  onClick: handleBack,\n                  sx: {\n                    mt: 1,\n                    mr: 1\n                  },\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, step.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 7\n      }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n        square: true,\n        elevation: 0,\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          sx: {\n            mt: 1,\n            mr: 1\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FaceSwapper, \"9RjaFbVdkYwFsgQnLB8M5lBGUzQ=\");\n\n_c2 = FaceSwapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"FaceSwapper\");","map":{"version":3,"sources":["E:/me/etude/1ING/me/sem2/lang script/face swap/frontend/src/components/FaceSwapper.js"],"names":["React","Box","FileCopyIcon","SaveIcon","PrintIcon","ShareIcon","useState","styled","Stack","Stepper","Step","StepLabel","StepContent","Button","Paper","Card","CardMedia","CardContent","CardActions","IconButton","IconButtonProps","Typography","FavoriteIcon","Toaster","toast","Input","display","actions","icon","name","handleChange","event","data","tableData","fx","target","value","axios","post","then","res","setResult","a","JSON","parse","cost_history","ah","cost_h_history","setSeries","setSeriesh","setOptions","chart","height","type","zoom","enabled","dataLabels","stroke","curve","title","text","align","grid","row","colors","opacity","xaxis","categories","Array","from","length","keys","yaxis","decimalsInFloat","setOptionsh","setSeries1","pos_history","setOptions1","floating","setSeries1h","pos_h_history","setOptions1h","setfn","catch","err","console","log","FaceSwapper","selectedSrcImage","setSelectedSrcImage","selectedDestImage","setSelectedDestImage","activeStep","setActiveStep","steps","label","description","URL","createObjectURL","files","backgroundColor","maxWidth","handleNext","prevActiveStep","handleAlert","step","error","handleBack","handleReset","map","index","color","fill","mb","mt","mr","p"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopyOutlined';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport { useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Stack from '@mui/material/Stack';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport StepContent from '@mui/material/StepContent';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport {Toaster, toast} from 'react-hot-toast'\r\nimport './FaceSwapper.css'\r\n\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nconst actions = [\r\n  { icon: <FileCopyIcon />, name: 'Copy' },\r\n  { icon: <SaveIcon />, name: 'Save' },\r\n  { icon: <PrintIcon />, name: 'Print' },\r\n  { icon: <ShareIcon />, name: 'Share' },\r\n];\r\n\r\nconst handleChange = (event) => {\r\n  const data = tableData\r\n  data.fx= event.target.value\r\n  axios\r\n    .post('http://127.0.0.1:5000/send', data)\r\n    .then((res)=>{\r\n\r\n        setResult(res.data)\r\n        const a=JSON.parse(res.data.cost_history)\r\n        const ah=JSON.parse(res.data.cost_h_history)\r\n       \r\n            setSeries([{\r\n              name: \"Cost\",\r\n              data: a\r\n          }])\r\n            setSeriesh([{\r\n              name: \"Cost\",\r\n              data: ah\r\n          }])\r\n\r\n          setOptions(\r\n            {\r\n            chart: {\r\n              height: 350,\r\n              type: 'line',\r\n              zoom: {\r\n                enabled: false\r\n              }\r\n            },\r\n            dataLabels: {\r\n              enabled: false\r\n            },\r\n            stroke: {\r\n              curve: 'straight'\r\n            },\r\n            title: {\r\n              text: 'Cost History without inertia decay',\r\n              align: 'left'\r\n            },\r\n            grid: {\r\n              row: {\r\n                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.5\r\n              },\r\n            },\r\n            xaxis: {\r\n              categories: Array.from(Array(a.length).keys()),\r\n            },\r\n            yaxis:{\r\n              decimalsInFloat: 2\r\n            }\r\n          },\r\n        )\r\n          setOptionsh(\r\n            {\r\n            chart: {\r\n              height: 350,\r\n              type: 'line',\r\n              zoom: {\r\n                enabled: false\r\n              }\r\n            },\r\n            dataLabels: {\r\n              enabled: false\r\n            },\r\n            stroke: {\r\n              curve: 'straight'\r\n            },\r\n            title: {\r\n              text: 'Cost History with inertia decay',\r\n              align: 'left'\r\n            },\r\n            grid: {\r\n              row: {\r\n                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.5\r\n              },\r\n            },\r\n            xaxis: {\r\n              categories: Array.from(Array(a.length).keys()),\r\n            },\r\n            yaxis:{\r\n              decimalsInFloat: 2\r\n            }\r\n          },\r\n        )\r\n\r\n        setSeries1([{\r\n          name: \"position\",\r\n          data: JSON.parse( res.data.pos_history)\r\n        }])\r\n\r\n        setOptions1({\r\n          chart: {\r\n            height: 350,\r\n            type: 'scatter',\r\n            zoom: {\r\n              enabled: true,\r\n              type: 'xy'\r\n            }\r\n          },\r\n          xaxis: { \r\n            floating: true,\r\n          },\r\n          yaxis: { \r\n            decimalsInFloat: 2\r\n          },\r\n          title: {\r\n            text: 'Animating swarms without inertia decay',\r\n            align: 'left'\r\n          },\r\n        })\r\n\r\n        setSeries1h([{\r\n          name: \"position\",\r\n          data: JSON.parse( res.data.pos_h_history)\r\n        }])\r\n\r\n        setOptions1h({\r\n          chart: {\r\n            height: 350,\r\n            type: 'scatter',\r\n            zoom: {\r\n              enabled: true,\r\n              type: 'xy'\r\n            }\r\n          },\r\n          xaxis: { \r\n            floating: true,\r\n          },\r\n          yaxis: { \r\n            decimalsInFloat: 2\r\n          },\r\n          title: {\r\n            text: 'Animating swarms with inertia decay ',\r\n            align: 'left'\r\n          },\r\n        })    \r\n    setfn(event.target.value)\r\n    })\r\n    .catch((err)=>{\r\n        console.log(err)\r\n    });\r\n}\r\nexport default function FaceSwapper() {\r\n  const [selectedSrcImage, setSelectedSrcImage] = useState(null);  \r\n  const [selectedDestImage, setSelectedDestImage] = useState(null);  \r\nconst [activeStep, setActiveStep] = React.useState(0);\r\n\r\nconst steps = [\r\n  {\r\n    label: 'Source image',\r\n    description: \r\n    <>\r\n      <div className='upload-container'>\r\n        <label>Paste image here...</label>\r\n        <br/>\r\n        <label id=\"ext\">Only JPG and PNG.</label>\r\n        {selectedSrcImage && (\r\n        <div>\r\n          <img alt=\"not fount\" width={\"250px\"} src={URL.createObjectURL(selectedSrcImage)} />\r\n        </div>\r\n        )}\r\n        <Stack className='upload_button'>\r\n          <label htmlFor=\"contained-button-file\">\r\n            <Input accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" \r\n                  name=\"myImage\"\r\n                  onChange={(event) => {\r\n                    console.log(event.target.files[0]);\r\n                    setSelectedSrcImage(event.target.files[0]);\r\n          }}  />\r\n            <Button variant=\"contained\"  component=\"span\" style={{backgroundColor: \"#EEB902\"}}>\r\n              Upload\r\n            </Button>\r\n          </label>\r\n        </Stack>\r\n    </div>\r\n    </>\r\n    ,\r\n  },\r\n  {\r\n    label: 'Destination image',\r\n    description:\r\n    <>\r\n    <div className='upload-container'>\r\n      <label>Paste image here...</label>\r\n      <br/>\r\n      <label id=\"ext\">Only JPG and PNG.</label>\r\n      {selectedDestImage && (\r\n      <div>\r\n        <img alt=\"not fount\" width={\"250px\"} src={URL.createObjectURL(selectedDestImage)} />\r\n      </div>\r\n      )}\r\n      <Stack className='upload_button'>\r\n        <label htmlFor=\"contained-button-file\">\r\n          <Input accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" \r\n                name=\"myImage\"\r\n                onChange={(event) => {\r\n                  console.log(event.target.files[0]);\r\n                  setSelectedDestImage(event.target.files[0]);\r\n        }}  />\r\n          <Button variant=\"contained\"  component=\"span\" style={{backgroundColor: \"#EEB902\"}}>\r\n            Upload\r\n          </Button>\r\n        </label>\r\n      </Stack>\r\n  </div>\r\n  </>\r\n    ,\r\n  },\r\n  {\r\n    label: 'Result',\r\n    description: \r\n    <>\r\n    <Card sx={{ maxWidth: 345 }}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"200\"\r\n        image=\"../src.jpg\"\r\n        alt=\"Result\"\r\n      />\r\n      <CardContent>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n    </>\r\n  },\r\n];\r\n\r\nconst handleNext = () => {\r\n  setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n};\r\n\r\nconst handleAlert=(step)=>{\r\n  console.log('step', step);\r\n  if(step==0)\r\n    if(selectedSrcImage===null)\r\n      toast.error('upload source image first!')\r\n    else\r\n        handleNext();\r\n  if(step==1)\r\n      if(selectedDestImage===null)\r\n        toast.error('upload destination image first!')\r\n      else\r\n        handleNext();\r\n  if(step==2){\r\n    toast('Good Job!', {\r\n      icon: '👏',\r\n    });\r\n    handleNext() ;}\r\n}\r\n\r\nconst handleBack = () => {\r\n  setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n};\r\n\r\nconst handleReset = () => {\r\n  setActiveStep(0);\r\n};\r\n\r\n\r\n  return (\r\n    <>\r\n    <Toaster \r\n      position=\"top-right\"\r\n      reverseOrder={true}/>\r\n    <Box className='stepper-container'>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((step, index) => (\r\n          <Step key={step.label} sx={{\r\n            '& .MuiStepLabel-root .Mui-completed': {\r\n              color: '#97CC04', // circle color (COMPLETED)\r\n            },\r\n            '& .MuiStepLabel-root .Mui-active': {\r\n              color: '#97CC04', // circle color (ACTIVE)\r\n            },\r\n            '& .MuiStepLabel-label .Mui-active .MuiStepLabel-alternativeLabel':\r\n              {\r\n                color: 'black', // Just text label (ACTIVE)\r\n              },\r\n            '& .MuiStepLabel-root .Mui-active .MuiStepIcon-text': {\r\n              fill: 'white', // circle's number (ACTIVE)\r\n            },\r\n          }}>\r\n            <StepLabel \r\n              optional={\r\n                index === 2 ? (\r\n                  <Typography variant=\"caption\">Last step</Typography>\r\n                ) : null\r\n              }\r\n            >\r\n              {step.label}\r\n            </StepLabel>\r\n            <StepContent>\r\n              <div>{step.description}</div>\r\n              <Box sx={{ mb: 2 }}>\r\n                <div>\r\n                  <Button style={{backgroundColor: \"#97CC04\"}}\r\n                    variant=\"contained\"\r\n                    onClick={()=>{handleAlert(index);}}\r\n                    sx={{ mt: 1, mr: 1 }}\r\n                  >\r\n                    {index === steps.length - 1 ? 'Finish' : 'Continue'}\r\n                  </Button>\r\n                  <Button\r\n                    disabled={index === 0}\r\n                    onClick={handleBack}\r\n                    sx={{ mt: 1, mr: 1 }}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              </Box>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} sx={{ p: 3 }}>\r\n          <Typography>All steps completed - you&apos;re finished</Typography>\r\n          <Button onClick={handleReset} sx={{ mt: 1, mr: 1 }}>\r\n            Reset\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </Box>\r\n  </>\r\n  )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}